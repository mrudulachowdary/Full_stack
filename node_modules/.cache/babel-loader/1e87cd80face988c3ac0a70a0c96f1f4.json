{"ast":null,"code":"import axios from 'axios';\nimport { GET_INVENTORY } from './type';\n\nvar _ = require('lodash');\n\nexport const getInventory = () => dispatch => {\n  console.log('will read the inventory');\n  axios.post('http://127.0.0.1:5000/read', {\n    data: {},\n    headers: {\n      'content-type': 'application/json;charset=UTF-8'\n    }\n  }).then(res => {\n    console.log('check the response: ', res);\n    if (!_.isNil(res.data)) dispatch(setInventory(res.data));\n  }).catch(err => {\n    if (!_.isNil(err)) dispatch(setInventory({}));\n  });\n};\nexport const setInventory = data => {\n  return {\n    type: GET_INVENTORY,\n    payload: data\n  };\n};","map":{"version":3,"sources":["C:/Users/abhil/Desktop/CRUD-master/CRUD-master/src/actions/readInventoryAction.js"],"names":["axios","GET_INVENTORY","_","require","getInventory","dispatch","console","log","post","data","headers","then","res","isNil","setInventory","catch","err","type","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,QAA5B;;AAEA,IAAIC,CAAC,GAAEC,OAAO,CAAC,QAAD,CAAd;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAMC,QAAQ,IAAI;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAP,EAAAA,KAAK,CAACQ,IAAN,CAAW,4BAAX,EAAwC;AACpCC,IAAAA,IAAI,EAAE,EAD8B;AAGpCC,IAAAA,OAAO,EAAE;AACL,sBAAe;AADV;AAH2B,GAAxC,EAOCC,IAPD,CAOMC,GAAG,IAAI;AACTN,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCK,GAApC;AACA,QAAI,CAACV,CAAC,CAACW,KAAF,CAAQD,GAAG,CAACH,IAAZ,CAAL,EACIJ,QAAQ,CAACS,YAAY,CAACF,GAAG,CAACH,IAAL,CAAb,CAAR;AACP,GAXD,EAYCM,KAZD,CAYOC,GAAG,IAAI;AACV,QAAI,CAACd,CAAC,CAACW,KAAF,CAAQG,GAAR,CAAL,EACIX,QAAQ,CAACS,YAAY,CAAC,EAAD,CAAb,CAAR;AACP,GAfD;AAgBH,CAlBM;AAoBP,OAAO,MAAMA,YAAY,GAAGL,IAAI,IAAI;AAChC,SAAM;AACFQ,IAAAA,IAAI,EAAEhB,aADJ;AAEFiB,IAAAA,OAAO,EAAET;AAFP,GAAN;AAIH,CALM","sourcesContent":["import axios from 'axios';\nimport {GET_INVENTORY} from './type';\n\nvar _= require('lodash');\n\nexport const getInventory = () => dispatch => {\n    console.log('will read the inventory');\n    axios.post('http://127.0.0.1:5000/read',{\n        data: {\n        },\n        headers: {\n            'content-type':'application/json;charset=UTF-8'\n        }\n    })\n    .then(res => {\n        console.log('check the response: ', res);\n        if (!_.isNil(res.data))\n            dispatch(setInventory(res.data));\n    })\n    .catch(err => {\n        if (!_.isNil(err))\n            dispatch(setInventory({}));\n    })\n}\n\nexport const setInventory = data => {\n    return{\n        type: GET_INVENTORY,\n        payload: data\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}