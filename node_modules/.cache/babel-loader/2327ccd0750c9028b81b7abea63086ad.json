{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhil\\\\Desktop\\\\CRUD-master\\\\CRUD-master\\\\src\\\\components\\\\ReadInventory.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport { Row, Col, Table } from 'antd';\nimport { getInventory } from '../actions/readInventoryAction';\nimport data from '../data.json';\n\nvar _ = require('lodash');\n\nconst isEmpty = require('is-empty');\n\nclass ReadInventory extends Component {\n  constructor(...args) {\n    super(...args);\n    this.columnNames = [{\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 20\n        }\n      }, \"Type\"),\n      key: 'type',\n      dataIndex: 'type',\n      sorter: (a, b) => a.type - b.type\n    }, {\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 18\n        }\n      }, \"Manufacturer\"),\n      key: 'manufacturer',\n      dataIndex: 'manufacturer',\n      sorter: (a, b) => a.manufacturer - b.manufacturer\n    }, {\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 20\n        }\n      }, \"Model\"),\n      key: 'model',\n      dataIndex: 'model'\n    }, {\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 20\n        }\n      }, \"Serial Number\"),\n      key: 'serial_number',\n      dataIndex: 'serial_number'\n    }, {\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 20\n        }\n      }, \"Vendor\"),\n      key: 'vendor',\n      dataIndex: 'vendor'\n    }, {\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }\n      }, \"Cost\"),\n      key: 'cost',\n      dataIndex: 'cost',\n      sorter: (a, b) => a.cost - b.cost\n    }, {\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 20\n        }\n      }, \"Purchased Date\"),\n      key: 'date_purchased',\n      dataIndex: 'date_purchased'\n    }, {\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }\n      }, \"Purchased By\"),\n      key: 'purchased_by',\n      dataIndex: 'purchased_by'\n    }, {\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 20\n        }\n      }, \"Count\"),\n      key: 'count',\n      dataIndex: 'count',\n      sorter: (a, b) => a.count - b.count\n    }, {\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 20\n        }\n      }, \"Location\"),\n      key: 'location',\n      dataIndex: 'location'\n    }];\n  }\n\n  componentDidMount() {\n    this.props.getInventory();\n  }\n\n  render() {\n    // Get the Inventory List\n    let dataDisplay = {};\n\n    if (!_.isNil(this.props) && !_.isNil(this.props.getInventoryList) && !_.isNil(this.props.getInventoryList.getInventoryList) && !_.isNil(this.props.getInventoryList.getInventoryList.inventory) && !isEmpty(!_.isNil(this.props.getInventoryList.getInventoryList.inventory))) {\n      dataDisplay = this.props.getInventoryList.getInventoryList.inventory;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, !isEmpty(dataDisplay) && /*#__PURE__*/React.createElement(Table, {\n      tableLayout: \"fixed\",\n      columns: this.columnNames,\n      dataSource: dataDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\n;\n\nfunction mapStateToProps(state) {\n  return {\n    getInventoryList: state.getInventoryList\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getInventory\n  }, dispatch);\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ReadInventory));","map":{"version":3,"sources":["C:/Users/abhil/Desktop/CRUD-master/CRUD-master/src/components/ReadInventory.js"],"names":["React","Component","connect","bindActionCreators","withRouter","Row","Col","Table","getInventory","data","_","require","isEmpty","ReadInventory","columnNames","title","fontWeight","key","dataIndex","sorter","a","b","type","manufacturer","cost","count","componentDidMount","props","render","dataDisplay","isNil","getInventoryList","inventory","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux'; \nimport { withRouter } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport { Row, Col, Table } from 'antd';\nimport {getInventory} from '../actions/readInventoryAction';\nimport data from '../data.json';\n\nvar _= require('lodash');\nconst isEmpty = require('is-empty');\n\nclass ReadInventory extends Component{\n    columnNames = [\n        {\n            title: <span style={{fontWeight: 'bold'}}>Type</span>,\n            key: 'type',\n            dataIndex: 'type',\n            sorter: (a,b) => a.type - b.type\n        },\n        {\n          title: <span style={{fontWeight: 'bold'}}>Manufacturer</span>,\n          key:'manufacturer',\n          dataIndex: 'manufacturer',\n          sorter: (a,b) => a.manufacturer - b.manufacturer\n        },\n        {\n            title: <span style={{fontWeight: 'bold'}}>Model</span>,\n            key:'model',\n            dataIndex: 'model'\n        },\n        {\n            title: <span style={{fontWeight: 'bold'}}>Serial Number</span>,\n            key:'serial_number',\n            dataIndex: 'serial_number'\n        },\n        {\n            title: <span style={{fontWeight: 'bold'}}>Vendor</span>,\n            key:'vendor',\n            dataIndex: 'vendor'\n        }, \n        {\n            title: <span style={{fontWeight: 'bold'}}>Cost</span>,\n            key:'cost',\n            dataIndex: 'cost',\n            sorter: (a, b) => a.cost - b.cost\n        }, \n        {\n            title: <span style={{fontWeight: 'bold'}}>Purchased Date</span>,\n            key:'date_purchased',\n            dataIndex: 'date_purchased'\n        },\n        {\n            title: <span style={{fontWeight: 'bold'}}>Purchased By</span>,\n            key:'purchased_by',\n            dataIndex: 'purchased_by'\n        },\n        {\n            title: <span style={{fontWeight: 'bold'}}>Count</span>,\n            key:'count',\n            dataIndex: 'count',\n            sorter: (a, b) => a.count - b.count\n        },\n        {\n            title: <span style={{fontWeight: 'bold'}}>Location</span>,\n            key:'location',\n            dataIndex: 'location'\n        }   \n    ];\n\n    componentDidMount(){\n        this.props.getInventory();\n    }\n\n    render(){\n        // Get the Inventory List\n        let dataDisplay = {};\n        if (!_.isNil(this.props) && !_.isNil(this.props.getInventoryList) && !_.isNil(this.props.getInventoryList.getInventoryList) &&\n            !_.isNil(this.props.getInventoryList.getInventoryList.inventory) && !isEmpty(!_.isNil(this.props.getInventoryList.getInventoryList.inventory))){\n            dataDisplay = this.props.getInventoryList.getInventoryList.inventory;\n        }\n        return(\n            <div>\n                <Row>\n                    <Col>\n                    {\n                        !isEmpty(dataDisplay) && \n                        <Table\n                            tableLayout='fixed'\n                            columns = {this.columnNames}\n                            dataSource = {dataDisplay}\n                        />\n                    }\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n};\n\nfunction mapStateToProps(state){\n    return{\n        getInventoryList: state.getInventoryList\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return bindActionCreators({ getInventory }, dispatch);\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ReadInventory));"]},"metadata":{},"sourceType":"module"}