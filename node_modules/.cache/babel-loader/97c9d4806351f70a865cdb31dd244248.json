{"ast":null,"code":"import axios from 'axios';\nimport { GET_INVENTORY } from './type';\n\nvar _ = require('lodash');\n\nexport const getInventory = () => dispatch => {\n  axios.post('http://127.0.0.1:5000/read', {}, {\n    data: {},\n    headers: {\n      'content-type': 'application/json;charset=UTF-8'\n    }\n  }).then(res => {\n    if (!_.isNil(res.data)) dispatch(setInventory(res.data));\n  }).catch(err => {\n    if (!_.isNil(err)) dispatch(setInventory({}));\n  });\n};\nexport const setInventory = data => {\n  return {\n    type: GET_INVENTORY,\n    payload: data\n  };\n};","map":{"version":3,"sources":["C:/Users/abhil/Desktop/CRUD-master/CRUD-master/src/actions/readInventoryAction.js"],"names":["axios","GET_INVENTORY","_","require","getInventory","dispatch","post","data","headers","then","res","isNil","setInventory","catch","err","type","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,QAA5B;;AAEA,IAAIC,CAAC,GAAEC,OAAO,CAAC,QAAD,CAAd;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAMC,QAAQ,IAAI;AAC1CL,EAAAA,KAAK,CAACM,IAAN,CAAW,4BAAX,EAAwC,EAAxC,EAA4C;AACxCC,IAAAA,IAAI,EAAE,EADkC;AAGxCC,IAAAA,OAAO,EAAE;AACL,sBAAe;AADV;AAH+B,GAA5C,EAOCC,IAPD,CAOMC,GAAG,IAAI;AACT,QAAI,CAACR,CAAC,CAACS,KAAF,CAAQD,GAAG,CAACH,IAAZ,CAAL,EACIF,QAAQ,CAACO,YAAY,CAACF,GAAG,CAACH,IAAL,CAAb,CAAR;AACP,GAVD,EAWCM,KAXD,CAWOC,GAAG,IAAI;AACV,QAAI,CAACZ,CAAC,CAACS,KAAF,CAAQG,GAAR,CAAL,EACIT,QAAQ,CAACO,YAAY,CAAC,EAAD,CAAb,CAAR;AACP,GAdD;AAeH,CAhBM;AAkBP,OAAO,MAAMA,YAAY,GAAGL,IAAI,IAAI;AAChC,SAAM;AACFQ,IAAAA,IAAI,EAAEd,aADJ;AAEFe,IAAAA,OAAO,EAAET;AAFP,GAAN;AAIH,CALM","sourcesContent":["import axios from 'axios';\nimport {GET_INVENTORY} from './type';\n\nvar _= require('lodash');\n\nexport const getInventory = () => dispatch => {\n    axios.post('http://127.0.0.1:5000/read',{}, {\n        data: {\n        },\n        headers: {\n            'content-type':'application/json;charset=UTF-8'\n        }\n    })\n    .then(res => {\n        if (!_.isNil(res.data))\n            dispatch(setInventory(res.data));\n    })\n    .catch(err => {\n        if (!_.isNil(err))\n            dispatch(setInventory({}));\n    })\n}\n\nexport const setInventory = data => {\n    return{\n        type: GET_INVENTORY,\n        payload: data\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}